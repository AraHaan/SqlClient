#################################################################################
# Licensed to the .NET Foundation under one or more agreements.                 #
# The .NET Foundation licenses this file to you under the MIT license.          #
# See the LICENSE file in the project root for more information.                #
#################################################################################
parameters:
  - name: debug
    type: boolean
    default: false

  - name: key
    type: string

  - name: value
    type: string

  - name: feedType
    default: Local
    values:
      - Local
      - ADO

steps:
- powershell: |
    # Get a list of package sources available
    Get-PackageSource

    $Value = "${{parameters.value }}"
    $Key = "${{parameters.key }}"

    # Register the local nuget folder to be used by nuget.config
    if ("${{parameters.feedType}}" -eq "Local") {
      Register-PackageSource  -Name "$Key" -Location $Value -Force -ProviderName NuGet -Trusted
    }

    # Set the NuGet.config file in the project to use internal feed
    $rootFolder = Get-location
    [Xml] $nugetConfig = Get-Content -Path "NuGet.config"

    $newAdd = $nugetConfig.CreateElement("add")
    $newAdd.SetAttribute("key","$Key")
    $newAdd.SetAttribute("value", "$Value" )
    $nugetConfig.configuration.packageSources.AppendChild($newAdd)

    $filePath = Join-Path $rootFolder "NuGet.config"
    $nugetConfig.Save($filePath)

  displayName: 'Add internal SNI feed to Nuget.config'

- ${{ if parameters.debug }}:
  - powershell: |
      # Display the content of the NuGet.config file
      Get-Content -Path "NuGet.config"
    displayName: 'Read NuGet.config [debug]'

- ${{ if eq(parameters.feedType, 'ADO') }}:
  - task: NuGetAuthenticate@1
    displayName: 'NuGet Authenticate'
