#################################################################################
# Licensed to the .NET Foundation under one or more agreements.                 #
# The .NET Foundation licenses this file to you under the MIT license.          #
# See the LICENSE file in the project root for more information.                #
#################################################################################
parameters:
  - name: debug
    type: boolean
    default: false

  - name: internalFeed
    type: string
    default: '$(internalFeed)'

  - name: internalSNIVersion
    type: string

steps:
- template: add-nuget-feed-step.yml@self
  parameters:
    debug: ${{ parameters.debug }}
    key: 'SNI Package source'
    value: ${{ parameters.internalFeed }}
    feedType: ADO

- powershell: |
    #Get the SNI Version to test from the user entered version.
    $newVersion = "${{parameters.internalSNIVersion }}"
    Write-Host "New SNI Version: "$newVersion
    
    # define file to update
    $rootFolder = Get-location
    $PropsPath = Join-Path $rootFolder "tools\props\Versions.props"

    [Xml] $versionProps = Get-Content -Path $PropsPath
    $nsm = New-Object Xml.XmlNamespaceManager($versionProps.NameTable)
    $nsm.AddNamespace('ns', $versionProps.DocumentElement.NamespaceURI)

    $sniVersion = $versionProps.SelectSingleNode('//ns:MicrosoftDataSqlClientSniVersion', $nsm)
    Write-Host "Current SNI Version: "$sniVersion.InnerText

    # update the node inner text
    $sniVersion.InnerText = "$newVersion"

    $sniRuntimeVersion = $versionProps.SelectSingleNode('//ns:MicrosoftDataSqlClientSNIRuntimeVersion', $nsm)
    Write-Host "Current SNI.runtime Version: "$sniRuntimeVersion.InnerText
      
    # update the node inner text
    $sniRuntimeVersion.InnerText = "$newVersion"
      
    # save the xml file
    $versionProps.Save($PropsPath)

  displayName: 'Update SNI version in Versions.props'

- ${{ if parameters.debug }}:
  - powershell: |
      # Display the content of the Versions.props file
      $rootFolder = Get-location
      $PropsPath = "$rootFolder\tools\props\Versions.props"
      Get-Content -Path "$PropsPath"
    displayName: 'Read Versions.props [debug]'
